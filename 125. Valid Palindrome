Problem :https://leetcode.com/problems/valid-palindrome/

Description : 

1. Remove non-alphanumeric characters and convert the string to lowercase.
  * This step makes the comparison case-insensitive and ignores characters like spaces, punctuation, etc.

2. Check if the resulting string is empty or has only one character.
  * If it is, return true because empty strings and single characters are always considered palindromes.

3.If the string has more than one character, compare the characters at the beginning and end of the string.
  *  Start from both ends and move towards the center of the string.
  *  If the characters at the current positions don't match, return false because it's not a palindrome.

4. If the loop completes without finding any non-matching characters, return true.

This indicates that the string is a palindrome, as all the characters matched when compared from the start to the end.

Solution : 

lass Solution {
    public boolean isPalindrome(String s) {
        s=s.replaceAll("[^a-zA-Z0-9]","").toLowerCase();
        if(s.length()==0 || s.length()==1) return true;
        // System.out.println(s);
        char[] chars=s.toCharArray();
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)!=s.charAt(s.length()-i-1)){
                return false;
            }
        }
        return true;
    }
}
