Problem : https://leetcode.com/problems/maximum-subarray/

**********************

Explanation :

1. Initialize two variables, currentSum and maxSum, both set to the first element of the input array nums.

2. Loop through the elements of the array starting from the second element (index 1).

3. In each iteration, update currentSum to be the maximum of the current element nums[i] and the sum of the current element and the previous currentSum.

4. Update maxSum to be the maximum of the current currentSum and the previous maxSum. This tracks the maximum subarray sum found so far.

5. Continue the loop until you've considered all elements in the array.

6. Return the maxSum as the maximum sum of any subarray within the given array.

************************

Solution :

class Solution {
    public int maxSubArray(int[] nums) {
        int currentSum=nums[0];
        int maxSum=nums[0];
        for(int i = 1 ; i <nums.length ; i++){
            currentSum=Math.max(nums[i],currentSum+nums[i]);
            maxSum=Math.max(currentSum,maxSum);
        }
        return maxSum;
    }
}
