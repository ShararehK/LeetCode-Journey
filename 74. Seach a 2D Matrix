Problem : https://leetcode.com/problems/search-a-2d-matrix/

***********************

Explanation :

this code implements an efficient search strategy for a specific type of matrix called a "sorted matrix" where each row and each column is sorted in ascending order. The search starts from the top-right corner of the matrix, and based on the comparisons, the pointers (i and j) are adjusted to move towards the target value. The search continues until the target is found or the pointers go out of bounds, indicating that the target is not present in the matrix.

***********************

Solution :

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int i = 0 , j = matrix[0].length - 1;
        while(i < matrix.length && j >= 0){
            if(matrix[i][j] > target){
                j--;
            }else if(matrix[i][j] < target){
                i++;
            }else{
                return true;
            }
        }
        return false;
    }
}
