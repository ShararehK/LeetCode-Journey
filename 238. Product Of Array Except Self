Problem : https://leetcode.com/problems/product-of-array-except-self/

**************************

Explanation :

1. Initialize totalProduct to 1, which will be used to store the product of all non-zero elements in the input array.

2. Create a variable countZero to keep track of how many zeros are in the input array.

3. Loop through the nums array:

  *  If the current element is not zero, multiply it with totalProduct to accumulate the product of non-zero elements.
  *  If the current element is zero, increment countZero to count the number of zeros in the array.
4. After the first loop, you have the product of all non-zero elements in totalProduct and the count of zeros in countZero.

5. In the second loop through the nums array:

  *  If there is more than one zero (countZero > 1), set the current element to 0 because the product of all elements will be 0.
  *  If there's only one zero (countZero == 1) and the current element is zero, set the current element to the totalProduct because it's the only zero in the array, and the product of all other elements is the totalProduct.
  *  If there's only one zero (countZero == 1) and the current element is not zero, set the current element to 0 because it's not the only zero.
  *  If there are no zeros, divide the totalProduct by the current element to get the product of all elements except the one at the current index.
6. Return the modified nums array, which now contains the desired products.

****************************

Solution : 

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int totalProduct=1;
        int countZero=0;
        for (int i : nums){
            if(i!=0){
                totalProduct*=i;
            }
            else{
                countZero++;
            }
            
        }
        for(int i=0 ; i < nums.length; i++){
            if (countZero>1){
                nums[i]=0;
            }
            else if (countZero==1 && nums[i]==0){
                nums[i]=totalProduct;
            }
            else if (countZero==1 && nums[i]!=0){
                nums[i]=0;
            }
            else{
                nums[i]=totalProduct/nums[i];
            }
        }
        return nums;
    }
}
